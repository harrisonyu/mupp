!!! Strict
%html#road{:xmlns => "http://www.w3.org/1999/xhtml"}
  %head
    #logo

    %meta{:content => "text/html; charset=utf-8", "http-equiv" => "content-type"}/
    / control bar
    %stylesheet_link_tag

    /this is a link to the actual style sheet from jqueryui
    /%link{:href => "http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css", :rel => "stylesheet"}/
    %script{:src => "http://code.jquery.com/jquery-1.9.1.js"}
    %script{:src => "http://code.jquery.com/ui/1.10.3/jquery-ui.js"}
      

    / chrome player script
    %script{:src => "//www.google.com/jsapi", :type => "text/javascript"}
      
    :javascript

      var width = window.width / 2
      var toolbarWidth = $("#toolbar").width / 2
      
      var toolbarPosition = width - toolbarWidth

      $("#toolbar").css("left", toolbarPosition)

      console.log("hi")


      $(function() {
        $( "#accordion" ).accordion({
          heightStyle: "content"
        });
      });


      google.load("swfobject", "2.1");

      // update the progress bar
      function updateProgressBar(progress)
      {
        $(function() {
          $( "#progressbar" ).progressbar({
            value: progress
          });
        });
      }
      

      // Update a particular HTML element with a new value
      function updateHTML(elmId, value) {
        document.getElementById(elmId).innerHTML = value;
      }
      
      // This function is called when an error is thrown by the player
      function onPlayerError(errorCode) {
        alert("An error occured of type:" + errorCode);
      }
      
      // This function is called when the player changes state
      function onPlayerStateChange(newState) {
        if(newState == 1)
          newState = "playing";
        else if(newState == 2)
          newState = "paused";
        else if(newState == -1)
          newState = "audio loaded";

        updateHTML("playerState", newState);
      }
      
      // Display information about the current state of the player
      function updatePlayerInfo() {
        // Also check that at least one function exists since when IE unloads the
        // page, it will destroy the SWF before clearing the interval.
        if(ytplayer && ytplayer.getDuration) {
          //updateHTML("videoDuration", ytplayer.getDuration());
          //updateHTML("videoCurrentTime", ytplayer.getCurrentTime());
          //updateHTML("bytesTotal", ytplayer.getVideoBytesTotal());
          //updateHTML("startBytes", ytplayer.getVideoStartBytes());
          //updateHTML("bytesLoaded", ytplayer.getVideoBytesLoaded());
          //updateHTML("volume", ytplayer.getVolume());
          if(ytplayer.getCurrentTime() > 0)
          {
             updateProgressBar((ytplayer.getCurrentTime() / ytplayer.getDuration()) * 100);
          }
        }
      }
      
      // Allow the user to set the volume from 0-100
      function setVideoVolume() {
        var volume = parseInt(document.getElementById("volumeSetting").value);
        if(isNaN(volume) || volume < 0 || volume > 100) {
          alert("Please enter a valid volume between 0 and 100.");
        }
        else if(ytplayer){
          ytplayer.setVolume(volume);
        }
      }
      
      function playVideo() {
        if (ytplayer) {
          ytplayer.playVideo();
        }
      }
      
      function pauseVideo() {
        if (ytplayer) {
          ytplayer.pauseVideo();
        }
      }
      
      function muteVideo() {
        if(ytplayer) {
          ytplayer.mute();
        }
      }
      
      function unMuteVideo() {
        if(ytplayer) {
          ytplayer.unMute();
        }
      }
      
      
      // This function is automatically called by the player once it loads
      function onYouTubePlayerReady(playerId) {
        ytplayer = document.getElementById("ytPlayer");
        // This causes the updatePlayerInfo function to be called every 250ms to
        // get fresh data from the player
        setInterval(updatePlayerInfo, 250);
        updatePlayerInfo();
        ytplayer.addEventListener("onStateChange", "onPlayerStateChange");
        ytplayer.addEventListener("onError", "onPlayerError");
        //Load an initial video into the player
        var link = "#{@songLink}"
        ytplayer.cueVideoById(link);
      }

      // The "main method" of this sample. Called when someone clicks "Run".
      function loadPlayer() {
        // Lets Flash from another domain call JavaScript
        var params = { allowScriptAccess: "always" };
        // The element id of the Flash embed
        var atts = { id: "ytPlayer" };
        // All of the magic handled by SWFObject (http://code.google.com/p/swfobject/)
        swfobject.embedSWF("http://www.youtube.com/apiplayer?" +
         "version=3&enablejsapi=1&playerapiid=player1", 
         "videoDiv", "1", "1", "9", null, null, params, atts);
      }
      function _run() {
        loadPlayer();
        updateProgressBar(0);
      }
      google.setOnLoadCallback(_run);
    /end chrome player script

  %body{:style => "font-family: Arial;border: 0 none;"}

    %br

    #progressbar
    / control bar stuff
    #toolbar.ui-widget-header.ui-corner-all.bar-nice-look.center-play-bar
      %button#play{:href => "javascript:void(0);", :onclick => "playVideo();"}
      %button#pause{:href => "javascript:void(0);", :onclick => "pauseVideo();"}
      %button#next
      /%button next artist
      
    / end control bar

    %table.centerc
      %tr
        %td
          #videoDiv Loading...
        %td{:valign => "top"}
          #videoInfo
            %p
              Player state:
              %span#playerState --


    %br
    %br

    %div.centerc
      where:
      = cities = ["new york", "los angeles"]
      %select{:cities}
      
    %br
    %br
    %br
    %br

    #accordion.no-border
      %h3.bar-nice-look.no-border Lyrics
      %div.text-background.no-border
        %p
        = @locationName.class
        = simple_format(@songLyrics)
      %h3.bar-nice-look.no-border Artist Bio
      %div.text-background.no-border
        %p 
        = simple_format(@biographyOfArtist)
      %h3.bar-nice-look.no-border Connection to city
      %div.text-background.no-border
        %p
        = simple_format(@reason)
â€‹
